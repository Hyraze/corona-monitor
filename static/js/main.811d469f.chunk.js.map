{"version":3,"sources":["components/ScrollComponent/Scroll.js","components/CardComponent/Card.js","assets/Constants.js","components/FooterComponent/Footer.js","components/GlobalComponent/GlobalComponent.js","components/CountryListComponent/CountryList.js","components/CountryComponent/CountryComponent.js","App.js","serviceWorker.js","index.js"],"names":["Scroll","props","className","children","Card","Constants","Footer","href","icon","faMapMarkerAlt","faPhone","faEnvelope","faHeart","title","target","rel","faGithub","faLinkedin","faTwitter","faInstagram","GlobalComponent","React","useState","LOADING","apiStatus","setApiStatus","stats","setStats","useEffect","fetch","headers","KEY","then","response","status","json","Error","statusText","currentStats","SUCCESS","catch","err","FAILED","type","color","height","width","timeout","FETCH_ERROR","total_cases","total_deaths","total_recovered","new_cases","new_deaths","CountryList","countries_stat","map","country_stat","i","key","country_name","toUpperCase","cases","deaths","serious_critical","active_cases","CountryComponent","searchValue","setSearchValue","filter","country","toLowerCase","includes","sort","a","b","parseInt","replace","placeholder","onChange","event","value","length","NO_RESULTS_FOUND","App","basename","to","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.811d469f.chunk.js","sourcesContent":["import React from 'react';\nimport './Scroll.css';\n\nconst Scroll = (props)=>{\n    return(\n        <div className=\"scroll\">\n            {props.children}\n        </div>\n    )\n}\n\nexport default Scroll;","import React from 'react';\nimport './Card.css';\n\nexport default function Card(props) {\n    return (\n        <div className=\"tc bg-black-50 br3 ma3 grow dib pa3 bw2 card-shadow\">\n            {props.children}\n        </div>\n    )\n}","const Constants = {\n    \"LOADING\": \"LOADING\",\n    \"SUCCESS\": \"SUCCESS\",\n    \"FAILED\": \"FAILED\",\n    \"KEY\": \"4a407207dcmsh645ecf78c9883bdp182f98jsncc654a8c82ef\",\n    \"GLOBAL\": \"GLOBAL\",\n    \"COUNTRIES\": \"COUNTRIES\",\n    \"FETCH_ERROR\": \"Failed to fetch data. Try again after some time...\",\n    \"NO_RESULTS_FOUND\": \"No results found...\"\n}\n\nexport default Constants;","import React from 'react';\nimport './Footer.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faInstagram,\n    faTwitter,\n    faGithub,\n    faLinkedin } from '@fortawesome/free-brands-svg-icons';\nimport { faMapMarkerAlt, faPhone, faEnvelope, faHeart } from '@fortawesome/free-solid-svg-icons';\n\nconst Footer = () => {\n    return (\n        <div>\n            <footer className=\"footer-distributed shadow-5\">\n                <div className=\"footer-left\">\n                    <h3>Corona <span>Monitor</span></h3>\n                    <p className=\"footer-links\">\n                        <a href=\"/\">Home</a>\n                        路\n                        <a href=\"/\">Blog</a>\n                        路\n                        <a href=\"/\">About</a>\n                        路\n                        <a href=\"/\">Faq</a>\n                        路\n                        <a href=\"/\">Contact</a>\n                    </p>\n                    <p className=\"footer-company-name\">dEv(uLa &copy; 2020</p>\n                </div>\n                <div className=\"footer-center\">\n                    <div>\n                        <FontAwesomeIcon className=\"faIcon\" icon={faMapMarkerAlt} />\n                        <p>Pune, India</p>\n                    </div>\n                    <div>\n                        <FontAwesomeIcon className=\"faIcon\" icon={faPhone} />\n                        <p>+91 6362947321</p>\n                    </div>\n                    <div>\n                        <FontAwesomeIcon className=\"faIcon faEnvelope\" icon={faEnvelope} />\n                        <p><a href=\"mailto:devcula@outlook.com\">devcula@outlook.com</a></p>\n                    </div>\n                </div>\n                <div className=\"footer-right\">\n                    <p className=\"footer-company-about\">\n                        <span>About the website</span>\n                        Made in time of need, this application was developed primarily for personal use. Made with <FontAwesomeIcon icon={faHeart} title=\"ReactJS\" /> using <strong>ReactJS</strong>.\n                    </p>\n                    <div className=\"footer-icons\">\n                        <a href=\"https://github.com/devcula\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faGithub} title=\"Github\" /></a>\n                        <a href=\"https://in.linkedin.com/in/devcula\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faLinkedin} title=\"Linkedin\" /></a>\n                        <a href=\"https://twitter.com/devcula\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faTwitter} title=\"Twitter\" /></a>\n                        <a href=\"https://www.instagram.com/devcula\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faInstagram} title=\"Instagram\" /></a>\n\n                    </div>\n                </div>\n            </footer>\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport Scroll from '../ScrollComponent/Scroll';\nimport Card from '../CardComponent/Card';\nimport Loader from 'react-loader-spinner';\nimport './GlobalComponent.css';\nimport Constants from '../../assets/Constants';\nimport Footer from '../FooterComponent/Footer';\n\nexport default function GlobalComponent() {\n    let [apiStatus, setApiStatus] = React.useState(Constants.LOADING);\n    let [ stats, setStats] = React.useState({});\n\n    React.useEffect( () => {\n        if(apiStatus === Constants.LOADING){\n            fetch(\"https://coronavirus-monitor.p.rapidapi.com/coronavirus/worldstat.php\", {\n                headers: {\n                    \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n                    \"x-rapidapi-key\": Constants.KEY\n                }\n            })\n            .then(response => {\n                if (response.status >= 200 && response.status <= 299) {\n                    return response.json();\n                }\n                else {\n                    throw Error(response.statusText);\n                }\n            })\n            .then(currentStats => {\n                setApiStatus(Constants.SUCCESS);\n                setStats(currentStats);\n            })\n            .catch(err => {\n                setApiStatus(Constants.FAILED);\n            });\n        }\n    });\n\n    if(apiStatus === Constants.LOADING){\n        return (\n            <div className=\"component-div tc\">\n                <Loader\n                    type=\"Audio\"\n                    color=\"#FFFFFF\"\n                    height={200}\n                    width={200}\n                    timeout={3000} //3 secs\n                />\n            </div>\n        )\n    }\n    else if(apiStatus === Constants.FAILED){\n        return (\n            <div className=\"tc component-div white f2\">\n                <div className=\"error-div\">\n                    {Constants.FETCH_ERROR}\n                </div>\n            </div>\n        )\n    }\n    else{\n        return (\n            <div className=\"tc component-div\">\n                <Scroll>\n                    <Card>\n                        <div className=\"white\">\n                            <div className=\"f1\">\n                                Total cases\n                            </div>\n                            <div className=\"f3 circle\">\n                                {stats.total_cases}\n                            </div>\n                        </div>\n                    </Card>\n                    <Card>\n                        <div className=\"white\">\n                            <div className=\"f1\">\n                                Total deaths\n                            </div>\n                            <div className=\"f3 circle\">\n                                {stats.total_deaths}\n                            </div>\n                        </div>\n                    </Card>\n                    <Card>\n                        <div className=\"white\">\n                            <div className=\"f1\">\n                                Total Recovered\n                            </div>\n                            <div className=\"f3 circle\">\n                                {stats.total_recovered}\n                            </div>\n                        </div>\n                    </Card>\n                    <Card>\n                        <div className=\"white\">\n                            <div className=\"f1\">\n                                New cases\n                            </div>\n                            <div className=\"f3 circle\">\n                                {stats.new_cases}\n                            </div>\n                        </div>\n                    </Card>\n                    <Card>\n                        <div className=\"white\">\n                            <div className=\"f1\">\n                                New Deaths\n                            </div>\n                            <div className=\"f3 circle\">\n                                {stats.new_deaths}\n                            </div>\n                        </div>\n                    </Card>\n                    <footer>\n                        <div className=\"footer-div\">\n                            <Footer />\n                        </div>\n                    </footer>\n                </Scroll>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport Card from '../CardComponent/Card';\n\nexport default function CountryList({ countries_stat }) {\n    return (\n        <div>\n            {\n                countries_stat.map((country_stat, i) => {\n                    return (\n                        <Card key={i}>\n                            <div className=\"white\">\n                                <div>\n                                    <label className=\"b f3 tc\">\n                                        {country_stat.country_name.toUpperCase()}\n                                    </label>\n                                    <table className=\"w-100\">\n                                        <tbody>\n                                            <tr>\n                                                <td className=\"b f4\">Total cases:</td>\n                                                <td className=\"tl\">{country_stat.cases}</td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b f4\">Total deaths:</td>\n                                                <td className=\"tl\">{country_stat.deaths}</td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b f4\">Recovered:</td>\n                                                <td className=\"tl\">{country_stat.total_recovered}</td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b f4\">New deaths:</td>\n                                                <td className=\"tl\">{country_stat.new_deaths}</td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b f4\">New cases:</td>\n                                                <td className=\"tl\">{country_stat.new_cases}</td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b f4\">Critical cases:</td>\n                                                <td className=\"tl\">{country_stat.serious_critical}</td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b f4\">Active cases:</td>\n                                                <td className=\"tl\">{country_stat.active_cases}</td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </Card>\n                    )\n                })\n            }\n        </div>\n    )\n}","import React from 'react';\nimport CountryList from '../CountryListComponent/CountryList';\nimport Scroll from '../ScrollComponent/Scroll';\nimport Loader from 'react-loader-spinner';\nimport './CountryComponent.css';\nimport Constants from '../../assets/Constants';\nimport Footer from '../FooterComponent/Footer';\n\nexport default function CountryComponent() {\n    let [apiStatus, setApiStatus] = React.useState(Constants.LOADING);\n    let [stats, setStats] = React.useState([]);\n    let [searchValue, setSearchValue] = React.useState(\"\");\n\n    const handleSearchChange = (event) => {\n        setSearchValue(event.target.value);\n    }\n\n    React.useEffect(() => {\n        if (apiStatus === Constants.LOADING) {\n            fetch(\"https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_country.php\", {\n                headers: {\n                    \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n                    \"x-rapidapi-key\": Constants.KEY\n                }\n            })\n            .then(response => {\n                if (response.status >= 200 && response.status <= 299) {\n                    return response.json();\n                }\n                else {\n                    throw Error(response.statusText);\n                }\n            })\n            .then(currentStats => {\n                setApiStatus(Constants.SUCCESS);\n                setStats(currentStats.countries_stat);\n            })\n            .catch(err => {\n                setApiStatus(Constants.FAILED);\n            });\n        }\n    });\n\n    if (apiStatus === Constants.LOADING) {\n        return (\n            <div className=\"component-div tc\">\n                <Loader\n                    type=\"Audio\"\n                    color=\"#FFFFFF\"\n                    height={200}\n                    width={200}\n                    timeout={3000} //3 secs\n\n                />\n            </div>\n        )\n    }\n    else if (apiStatus === Constants.FAILED) {\n        return (\n            <div className=\"tc f2 white component-div\">\n                <div className=\"error-div\">\n                    {Constants.FETCH_ERROR}\n                </div>\n            </div>\n        )\n    }\n    else {\n        //Filtering based on Searchbox\n        if (searchValue) {\n            stats = stats.filter((country) => {\n                return country.country_name.toLowerCase().includes(searchValue.toLowerCase());\n            });\n        }\n\n        //Sorting data based on total number of cases\n        stats.sort((a, b) => {\n            return (parseInt(b.cases.replace(',', '')) - parseInt(a.cases.replace(',', '')));\n        })\n\n        return (\n            <div className=\"tc component-div\">\n                <input className=\"shadow-5 grow f4 br4 tc pa2 input-field\" type=\"search\" placeholder=\"Search By Country\" onChange={handleSearchChange} />\n                {\n                    stats.length === 0 ?\n                        <div className=\"f2 white ma4\">\n                            {Constants.NO_RESULTS_FOUND}\n                        </div> :\n                        <Scroll>\n                            <CountryList countries_stat={stats} />\n                        </Scroll>\n                }\n                <footer>\n                    <Footer />\n                </footer>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport { HashRouter, Switch, Route, Link } from 'react-router-dom';\nimport GlobalComponent from './components/GlobalComponent/GlobalComponent';\nimport CountryComponent from './components/CountryComponent/CountryComponent';\n// import Footer from './components/FooterComponent/Footer';\n\nexport default function App() {\n  return (\n    <div>\n      <HashRouter basename=\"/\">\n        <div>\n          <header className=\"shadow-5 w-100 ph3 pv3 pv4-ns ph4-m ph5-l\">\n            <nav className=\"f6 fw6 ttu tracked\">\n              <Link className=\"link dim white dib mr3\" to=\"/\">\n                <span className=\"f3 tc\">Global</span>\n            </Link>\n              <Link className=\"link dim white dib mr3\" to=\"/countries\">\n                <span className=\"f3 tc\">Countries</span>\n            </Link>\n            </nav>\n          </header>\n\n          <Switch>\n            <Route path=\"/countries\">\n              <CountryComponent />\n            </Route>\n            <Route path=\"/\">\n              <GlobalComponent />\n            </Route>\n          </Switch>\n        </div>\n      </HashRouter>\n      {/* <footer>\n        <Footer />\n      </footer> */}\n    </div>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}