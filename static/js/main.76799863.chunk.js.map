{"version":3,"sources":["components/ScrollComponent/Scroll.js","components/CardComponent/Card.js","components/LoaderComponent/Loader.js","components/GlobalComponent/GlobalComponent.js","components/CountryListComponent/CountryList.js","components/CountryComponent/CountryComponent.js","components/FooterComponent/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Scroll","props","className","children","Card","override","css","Loader","loading","sizeUnit","size","color","GlobalComponent","React","useState","isLoading","setIsLoading","stats","setStats","useEffect","fetch","headers","then","response","json","currentStats","total_cases","total_deaths","total_recovered","new_cases","new_deaths","CountryList","countries_stat","map","country_stat","i","key","country_name","cases","deaths","serious_critical","active_cases","CountryComponent","searchValue","setSearchValue","filter","country","toLowerCase","includes","type","placeholder","onChange","event","target","value","Footer","href","icon","faMapMarkerAlt","faPhone","faEnvelope","faHeart","title","rel","faGithub","faLinkedin","faTwitter","faInstagram","App","to","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.76799863.chunk.js","sourcesContent":["import React from 'react';\nimport './Scroll.css';\n\nconst Scroll = (props)=>{\n    return(\n        <div className=\"scroll\">\n            {props.children}\n        </div>\n    )\n}\n\nexport default Scroll;","import React from 'react';\n\nexport default function Card(props) {\n    return (\n        <div className=\"tc bg-near-white br3 ma2 grow dib pa3 bw2 shadow-5\">\n            {props.children}\n        </div>\n    )\n}","import React from \"react\";\nimport './Loader.css'\nimport { css } from '@emotion/core';\nimport { GridLoader } from 'react-spinners';\n\nconst override = css`\n    display: block;\n    margin: 0 auto;\n    border-color: red;\n`;\n\nconst Loader = ({loading}) =>{\n    if(loading){\n        return (\n            <div className='overlay'>\n              <div className='sweet-loading middle'>\n                <GridLoader\n                  css={override}\n                  sizeUnit={\"px\"}\n                  size={30}\n                  color={'#888888'}\n                  loading={loading}\n                />\n              </div>\n            </div>\n        )\n    }\n    else{\n        return null;\n    }\n}\n\nexport default Loader;","import React from 'react';\nimport Scroll from '../ScrollComponent/Scroll';\nimport Card from '../CardComponent/Card';\nimport Loader from '../LoaderComponent/Loader';\n\nexport default function GlobalComponent() {\n    let [ isLoading, setIsLoading ] = React.useState(true);\n    let [ stats, setStats] = React.useState({});\n\n    React.useEffect( () => {\n        if(isLoading){\n            fetch(\"https://coronavirus-monitor.p.rapidapi.com/coronavirus/worldstat.php\", {\n                headers: {\n                    \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n                    \"x-rapidapi-key\": \"4a407207dcmsh645ecf78c9883bdp182f98jsncc654a8c82ef\"\n                }\n            }).then(response => {\n                return response.json();\n            }).then(currentStats => {\n                setStats(currentStats);\n                setIsLoading(false);\n            });\n        }\n    });\n\n    if(isLoading){\n        return (\n            <Loader loading={isLoading} />\n        )\n    }\n    else{\n        return (\n            <div className=\"tc component-div\">\n                <Scroll>\n                    <Card>\n                        <div className=\"f1\">\n                            Total cases\n                    </div>\n                        <div className=\"f3\">\n                            {stats.total_cases}\n                        </div>\n                    </Card>\n                    <Card>\n                        <div className=\"f1\">\n                            Total deaths\n                    </div>\n                        <div className=\"f3\">\n                            {stats.total_deaths}\n                        </div>\n                    </Card>\n                    <Card>\n                        <div className=\"f1\">\n                            Total Recovered\n                    </div>\n                        <div className=\"f3\">\n                            {stats.total_recovered}\n                        </div>\n                    </Card>\n                    <Card>\n                        <div className=\"f1\">\n                            New cases\n                    </div>\n                        <div className=\"f3\">\n                            {stats.new_cases}\n                        </div>\n                    </Card>\n                    <Card>\n                        <div className=\"f1\">\n                            New Deaths\n                    </div>\n                        <div className=\"f3\">\n                            {stats.new_deaths}\n                        </div>\n                    </Card>\n                </Scroll>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport Card from '../CardComponent/Card';\n\nexport default function CountryList({countries_stat}) {\n    return (\n        <div>\n            {\n                countries_stat.map((country_stat, i) => {\n                    return (\n                        <Card key={i}>\n                            <div>\n                                <label className=\"b f4\">\n                                    Country:\n                                </label> \n                                {country_stat.country_name}\n                            </div>\n                            <div>\n                                <label className=\"b f4\">\n                                    Total cases:\n                                </label> \n                                {country_stat.cases}\n                            </div>\n                            <div>\n                                <label className=\"b f4\">\n                                    Total deaths:\n                                </label> \n                                {country_stat.deaths}\n                            </div>\n                            <div>\n                                <label className=\"b f4\">\n                                    Recovered:\n                                </label> \n                                {country_stat.total_recovered}\n                            </div>\n                            <div>\n                                <label className=\"b f4\">\n                                    New deaths:\n                                </label> \n                                {country_stat.new_deaths}\n                            </div>\n                            <div>\n                                <label className=\"b f4\">\n                                    New cases:\n                                </label> \n                                {country_stat.new_cases}\n                            </div>\n                            <div>\n                                <label className=\"b f4\">\n                                    Serious/Critical cases:\n                                </label> \n                                {country_stat.serious_critical}\n                            </div>\n                            <div>\n                                <label className=\"b f4\">\n                                    Active cases:\n                                </label> {country_stat.active_cases}\n                            </div>\n                        </Card>\n                    )\n                })\n            }\n        </div>\n    )\n}","import React from 'react';\nimport Loader from '../LoaderComponent/Loader';\nimport CountryList from '../CountryListComponent/CountryList';\nimport Scroll from '../ScrollComponent/Scroll';\n\nexport default function CountryComponent() {\n    let [ isLoading, setIsLoading ] = React.useState(true);\n    let [ stats, setStats] = React.useState([]);\n    let [ searchValue, setSearchValue] = React.useState(\"\");\n\n    const handleSearchChange = (event) => {\n        setSearchValue(event.target.value);\n    }\n\n    React.useEffect(() => {\n        if (isLoading) {\n            fetch(\"https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_country.php\", {\n                headers: {\n                    \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n                    \"x-rapidapi-key\": \"4a407207dcmsh645ecf78c9883bdp182f98jsncc654a8c82ef\"\n                }\n            }).then(response => {\n                return response.json();\n            }).then(currentStats => {\n                setStats(currentStats.countries_stat);\n                setIsLoading(false);\n            });\n        }\n    });\n\n    if (isLoading) {\n        return (\n            <Loader loading={isLoading} />\n        )\n    }\n    else{\n        stats = stats.filter( (country) => {\n            return country.country_name.toLowerCase().includes(searchValue.toLowerCase());\n        });\n\n        return (\n            <div className=\"tc component-div\">\n                <input className=\"f3 br-pill tc pa2\" type=\"search\" placeholder=\"Search By Country\" onChange={handleSearchChange} />\n                <Scroll>\n                    <CountryList countries_stat={stats} />\n                </Scroll>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './Footer.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faInstagram,\n    faTwitter,\n    faGithub,\n    faLinkedin } from '@fortawesome/free-brands-svg-icons';\nimport { faMapMarkerAlt, faPhone, faEnvelope, faHeart } from '@fortawesome/free-solid-svg-icons';\n\nconst Footer = () => {\n    return (\n        <div>\n            <footer className=\"footer-distributed\">\n                <div className=\"footer-left\">\n                    <h3>Covid-19 <span>Monitor</span></h3>\n                    <p className=\"footer-links\">\n                        <a href=\"/\">Home</a>\n                        ·\n                        <a href=\"/\">Blog</a>\n                        ·\n                        <a href=\"/\">About</a>\n                        ·\n                        <a href=\"/\">Faq</a>\n                        ·\n                        <a href=\"/\">Contact</a>\n                    </p>\n                    <p className=\"footer-company-name\">dEv(uLa &copy; 2020</p>\n                </div>\n                <div className=\"footer-center\">\n                    <div>\n                        <FontAwesomeIcon className=\"faIcon\" icon={faMapMarkerAlt} />\n                        <p><span>Life Republic Township</span> Pune, India</p>\n                    </div>\n                    <div>\n                        <FontAwesomeIcon className=\"faIcon\" icon={faPhone} />\n                        <p>+91 6362947321</p>\n                    </div>\n                    <div>\n                        <FontAwesomeIcon className=\"faIcon faEnvelope\" icon={faEnvelope} />\n                        <p><a href=\"mailto:devcula@outlook.com\">devcula@outlook.com</a></p>\n                    </div>\n                </div>\n                <div className=\"footer-right\">\n                    <p className=\"footer-company-about\">\n                        <span>About the website</span>\n                        Made in time of need, this application is being developed for personal use. Made with <FontAwesomeIcon icon={faHeart} title=\"ReactJS\" /> using <strong>ReactJS</strong>.\n                    </p>\n                    <div className=\"footer-icons\">\n                        <a href=\"https://github.com/devcula\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faGithub} title=\"Github\" /></a>\n                        <a href=\"https://in.linkedin.com/in/devcula\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faLinkedin} title=\"Linkedin\" /></a>\n                        <a href=\"https://twitter.com/devcula\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faTwitter} title=\"Twitter\" /></a>\n                        <a href=\"https://www.instagram.com/devcula\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faInstagram} title=\"Instagram\" /></a>\n\n                    </div>\n                </div>\n            </footer>\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\nimport GlobalComponent from './components/GlobalComponent/GlobalComponent';\nimport CountryComponent from './components/CountryComponent/CountryComponent';\nimport Footer from './components/FooterComponent/Footer';\n\n// export default function App() {\n//   let name = useFormInput('Abhishek Prasad'); //React Hook\n//   let {width, height} = useWindowDimension();\n\n//   return(\n//     <div className=\"tc f1\">\n//       <input className=\"tc br4 ma4\" {...name} />\n//       <section>\n//         <label>Window width: {width}</label>\n//         <br/>\n//         <label>Window height: {height}</label>\n//       </section>\n//     </div>\n//   );\n// }\n\n// //Defining custom hooks to subscribe to form inputs and Window dimensions\n\n// const useFormInput = (initialValue) => {\n//   let [value, setValue] = React.useState(initialValue);\n\n//   const handleChange = (event) => {\n//     setValue(event.target.value);\n//   }\n\n//   return {\n//     value,\n//     onChange: handleChange\n//   }\n// }\n\n// const useWindowDimension = () => {\n//   const [width, setWidth] = React.useState(window.innerWidth);\n//   const [height, setHeight] = React.useState(window.innerHeight);\n\n//   const handleDimensionsChange = () => {\n//     setWidth(window.innerWidth);\n//     setHeight(window.innerHeight);\n//   }\n\n//   React.useEffect(() => {\n//     window.addEventListener('resize', handleDimensionsChange);\n//     //Returning a cleanup function which will be automatically called by react to call during component unmount\n//     return () => {\n//       window.removeEventListener('resize', handleDimensionsChange);\n//     }\n//   })\n\n//   return {\n//     width,\n//     height\n//   }\n// }\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <header className=\"bg-black-90 w-100 ph3 pv3 pv4-ns ph4-m ph5-l\">\n          <nav className=\"f6 fw6 ttu tracked\">\n            <Link className=\"link dim white dib mr3\" to=\"/\">\n              Global Statistics\n            </Link>\n            <Link className=\"link dim white dib mr3\" to=\"/country\">\n              Country wise Statistics\n            </Link>\n          </nav>\n        </header>\n\n        <Switch>\n          <Route path=\"/country\">\n            <CountryComponent />\n          </Route>\n          <Route path=\"/\">\n            <GlobalComponent />\n          </Route>\n        </Switch>\n        <Footer />\n      </div>\n    </Router>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}